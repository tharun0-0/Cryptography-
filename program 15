import numpy as np

def hill_cipher_encrypt(plaintext, key):
    key_matrix = np.array([[9, 4], [5, 7]])
    plaintext_matrix = []
    
    for char in plaintext:
        if char.isalpha():
            plaintext_matrix.append(ord(char.lower()) - ord('a'))
    
    while len(plaintext_matrix) % 2 != 0:
        plaintext_matrix.append(0)
    
    plaintext_matrix = np.array(plaintext_matrix).reshape(-1, 2)
    ciphertext_matrix = np.dot(plaintext_matrix, key_matrix) % 26
    
    ciphertext = ''.join(chr(num + ord('a')) for num in ciphertext_matrix.flatten())
    return ciphertext

def hill_cipher_decrypt(ciphertext, key):
    key_matrix = np.array([[9, 4], [5, 7]])
    determinant = int(np.round(np.linalg.det(key_matrix))) % 26
    inv_determinant = pow(determinant, -1, 26)
    
    adjugate_matrix = np.array([[7, -4], [-5, 9]]) % 26
    inverse_key_matrix = (inv_determinant * adjugate_matrix) % 26
    
    ciphertext_matrix = []
    
    for char in ciphertext:
        ciphertext_matrix.append(ord(char) - ord('a'))
    
    ciphertext_matrix = np.array(ciphertext_matrix).reshape(-1, 2)
    plaintext_matrix = np.dot(ciphertext_matrix, inverse_key_matrix) % 26
    
    plaintext = ''.join(chr(num + ord('a')) for num in plaintext_matrix.flatten())
    return plaintext

plaintext = "meet me at the usual place at ten rather than eight oclock"
ciphertext = hill_cipher_encrypt(plaintext.replace(" ", ""), [[9, 4], [5, 7]])
decrypted_text = hill_cipher_decrypt(ciphertext, [[9, 4], [5, 7]])

print("Ciphertext:", ciphertext)
print("Decrypted Text:", decrypted_text)
